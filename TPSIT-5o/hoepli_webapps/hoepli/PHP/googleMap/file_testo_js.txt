//------------------------------------------------------------
//FUNZIONE PER USARE PERCORSI RELATIVI CON IL FILESYSTEMOBJECT
/-------------------------------------------------------------
//METTERE NELLA SEZIONE <HEAD>
function getInstallBase() {	
    //il percorso è ottenuto da window.location.pathname
    var selfPath = window.location.pathname.replace(/\\/g,'/');	//rimpiazza i caratteri non accettabili
    if (selfPath.charAt(0) === '/') {		//TOGLIE '/' DALL'INIZIO DEL PERCORSO -------- === non effettua conversioni
        selfPath = selfPath.substring(1, selfPath.length);
    }
    selfPath = selfPath.split(" "); //divide in caso di spazi
    return selfPath[0].substr(0, selfPath[0].lastIndexOf("/")) +  '/';   //ritorna la cartella nel quale è contenuto questo file
}
//-------------------------------------------------------------
//FINE FUNZIONE
//-------------------------------------------------------------

// ----------------------------------------------------------------------------------------
// LEGGERE DAL FILE DI TESTO
// ----------------------------------------------------------------------------------------
//FILE SYSTEM OBJECT http://www.ezineasp.net/post/JavaScript-Scripting-FileSystemObject.aspx
var fso = new ActiveXObject("Scripting.FileSystemObject");	
var percorso = getInstallBase() + 'localita.txt';
//verifica se file esiste	
if (fso.FileExists(percorso)) 
{		
  //APRE IL FILE da percorso relativo grazie a getInstallBase
  var txtFile = fso.OpenTextFile(percorso, 1, false, 0);
  //CICLO FINO A EOF DEL FILE		
  while(!txtFile.AtEndOfStream)
  {	
    //LEGGI RIGA DAL FILE
    var rigaLetta = txtFile.ReadLine();
    //LETTURA CAMPO FINO A ";"	
    var nomeComune = rigaLetta.substr(rigaLetta.indexOf(';') + 1);
    //POI BISOGNA LEGGERE ANCHE GLI ALTRI CAMPI ...				
  }
}
txtFile.Close();  
fso = null;	